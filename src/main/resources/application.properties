# rivedi quando capisci come fare autenticazione con oauth2
#spring.security.oauth2.client.registration.github.client-id=
#spring.security.oauth2.client.registration.github.client-secret=

#hibernate config
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default-schema=todo
spring.jpa.open-in-view=false
spring.jpa.hibernate.naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.liquibase.change-log=classpath:/db/changelog/update.xml
spring.liquibase.drop-first=false
spring.liquibase.enabled=false
spring.liquibase.default-schema=todo
#spring.liquibase.liquibase-schema=todo

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
#spring.datasource.initialization-mode=always
#spring.datasource.continue-on-error=true

#liquibase

logging.level.liquibase=INFO
logging.level.org.hibernate.sql=INFO
